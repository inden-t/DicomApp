<!-- xaml->xml-->
<!-- 以下は、DICOM 画像の表示コントロールを実装するための XAML コードです。これは、要件定義書に記載されている `ImageViewerControl.xaml` ファイルに相当します。-->
<!-- -->
<!-- ```xml-->
<UserControl x:Class="DICOMViewer.Views.ImageViewerControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
  <Grid>
    <Image x:Name="DicomImage" Stretch="Uniform" />
    <Canvas x:Name="CanvasOverlay" />
  </Grid>
</UserControl>
<!-- ```-->
<!-- -->
<!-- このコントロールには、DICOM 画像を表示するための `Image` 要素と、オーバーレイを描画するための `Canvas` 要素が含まれています。-->
<!-- -->
<!-- 次に、このコントロールの機能を実装するための C# コードを示します。これは、要件定義書に記載されている `ImageViewerControl.xaml.cs` ファイルに相当します。-->
<!-- -->
<!-- ```csharp-->
<!-- using System;-->
<!-- using System.Windows;-->
<!-- using System.Windows.Controls;-->
<!-- using System.Windows.Media;-->
<!-- using System.Windows.Media.Imaging;-->
<!-- using Dicom;-->
<!-- using Dicom.Imaging;-->
<!-- -->
<!-- namespace DICOM_Viewer.Views-->
<!-- {-->
<!--     public partial class ImageViewerControl : UserControl-->
<!--     {-->
<!--         private DicomImage _dicomImage;-->
<!--         private double _zoomFactor = 1.0;-->
<!--         private Point _panOffset = new Point(0, 0);-->
<!--         private double _rotationAngle = 0.0;-->
<!-- -->
<!--         public ImageViewerControl()-->
<!--         {-->
<!--             InitializeComponent();-->
<!--         }-->
<!-- -->
<!--         public void SetDicomImage(DicomImage dicomImage)-->
<!--         {-->
<!--             _dicomImage = dicomImage;-->
<!--             UpdateImageDisplay();-->
<!--         }-->
<!-- -->
<!--         private void UpdateImageDisplay()-->
<!--         {-->
<!--             if (_dicomImage == null)-->
<!--                 return;-->
<!-- -->
<!--             var bitmap = _dicomImage.RenderImage();-->
<!--             var bitmapSource = Imaging.CreateBitmapSourceFromHBitmap(-->
<!--                 bitmap.GetHbitmap(),-->
<!--                 IntPtr.Zero,-->
<!--                 Int32Rect.Empty,-->
<!--                 BitmapSizeOptions.FromEmptyOptions());-->
<!-- -->
<!--             DicomImage.Source = bitmapSource;-->
<!--             DicomImage.RenderTransform = new TransformGroup-->
<!--             {-->
<!--                 Children =-->
<!--                 {-->
<!--                     new ScaleTransform(_zoomFactor, _zoomFactor),-->
<!--                     new TranslateTransform(_panOffset.X, _panOffset.Y),-->
<!--                     new RotateTransform(_rotationAngle)-->
<!--                 }-->
<!--             };-->
<!--         }-->
<!-- -->
<!--         public void Zoom(double factor)-->
<!--         {-->
<!--             _zoomFactor *= factor;-->
<!--             UpdateImageDisplay();-->
<!--         }-->
<!-- -->
<!--         public void Pan(double x, double y)-->
<!--         {-->
<!--             _panOffset.X += x;-->
<!--             _panOffset.Y += y;-->
<!--             UpdateImageDisplay();-->
<!--         }-->
<!-- -->
<!--         public void Rotate(double angle)-->
<!--         {-->
<!--             _rotationAngle += angle;-->
<!--             UpdateImageDisplay();-->
<!--         }-->
<!--     }-->
<!-- }-->
<!-- ```-->
<!-- -->
<!-- このコードでは、DICOM 画像の表示、ズーム、パン、回転などの機能を実装しています。`SetDicomImage` メソッドを使用して DICOM 画像を設定し、`Zoom`、`Pan`、`Rotate` メソッドを使用して画像の操作を行うことができます。-->
<!-- -->
<!-- `UpdateImageDisplay` メソッドは、DI-->